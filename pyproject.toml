[tool.poetry]
name = "textual_jsonschema_form"
version = "0.0.1"
description = "Textual forms based on jsonschema"
authors = ["Lukas Burkhard <dev@lksch.ch>"]
repository = "https://github.com/gh-PonyM/textual-jsonschema-form"
documentation = "https://gh-PonyM.github.io/textual-jsonschema-form/"
readme = "README.md"
packages = [
  {include = "textual_jsonschema_form"}
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
textual = "^0.46.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"
bump2version = "^1.0.1"
pydantic = "^2.5.3"
textual-dev = "^1.3.0"
ruff = "^0.1.9"
pytest-asyncio = "^0.23.2"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.23.0"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
preview = true
skip-string-normalization = false
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.nox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
files = ["textual_jsonschema_form"]
disallow_untyped_defs = "False"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Shadows Builtin
    "A002",
    "A003",
    "RUF012",
    "C408",
    "RUF015",
    # function too complex
    "C901",
    # Long mesage outside exception class
    "TRY003",
    # Use specific rule codes when ignoring type issues
    "PGH003"
]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["textual_jsonschema_form"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
